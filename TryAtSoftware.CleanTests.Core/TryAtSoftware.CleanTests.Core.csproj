<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>netstandard2.1</TargetFramework>
        <LangVersion>latest</LangVersion>
        <Nullable>enable</Nullable>
        <IsTestProject>false</IsTestProject>
        <SonarQubeTestProject>false</SonarQubeTestProject>

        <PackageId>TryAtSoftware.CleanTests</PackageId>
        <Version>1.1.0-alpha.1</Version>
        <Authors>Tony Troeff</Authors>
        <RepositoryUrl>https://github.com/TryAtSoftware/CleanTests</RepositoryUrl>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <Description>This package should be used to generate multiple combinations for a test case (according to the applied setup) and thus make the process of writing tests cleaner and easier than ever before.</Description>
        <Copyright>Copyright (c) Tony Troeff</Copyright>
        <PackageTags>tryatsoftware testing combinatorics</PackageTags>
        <PackageReadmeFile>README.md</PackageReadmeFile>
    </PropertyGroup>

    <ItemGroup>
        <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="7.0.0" />
        <PackageReference Include="SonarAnalyzer.CSharp" Version="9.7.0.75501">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="System.Threading.Tasks.Dataflow" Version="7.0.0" />
        <PackageReference Include="TryAtSoftware.Extensions.Collections" Version="1.1.2-alpha.5" />
        <PackageReference Include="TryAtSoftware.Extensions.Reflection" Version="1.1.1" />
        <PackageReference Include="xunit" Version="2.4.2" />
    </ItemGroup>

    <ItemGroup>
        <None Include="..\README.md" Pack="true" PackagePath="\" />
    </ItemGroup>

</Project>
