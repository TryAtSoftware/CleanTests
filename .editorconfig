root = true

[*]
charset = utf-8
end_of_line = crlf
insert_final_newline = false
indent_style = space
indent_size = 4

[*.cs]
# Microsoft .NET properties
csharp_indent_braces = false
csharp_indent_switch_labels = true
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true
csharp_preferred_modifier_order = public, private, protected, internal, new, abstract, virtual, sealed, override, static, readonly, extern, unsafe, volatile, async:suggestion
csharp_preserve_single_line_blocks = true
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false
csharp_style_var_elsewhere = true:warning
csharp_style_var_for_built_in_types = true:warning
csharp_style_var_when_type_is_apparent = true:warning
csharp_using_directive_placement = inside_namespace:warning
csharp_prefer_braces = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_prefer_simple_default_expression = true:suggestion
dotnet_style_object_initializer = true:suggestion

# IDE0160: Convert to file-scoped namespace
csharp_style_namespace_declarations = file_scoped:warning

# Naming styles
dotnet_naming_style.all_upper_style.capitalization = all_upper
dotnet_naming_style.all_upper_style.word_separator = _

dotnet_naming_style.camel_case_style.capitalization = camel_case

dotnet_naming_style.underscore_camel_case_style.capitalization = camel_case
dotnet_naming_style.underscore_camel_case_style.required_prefix = _

dotnet_naming_style.pascal_case_style.capitalization = pascal_case

dotnet_naming_style.i_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.i_pascal_case_style.required_prefix = I

dotnet_naming_style.t_pascal_case_style.capitalization = pascal_case
dotnet_naming_style.t_pascal_case_style.required_prefix = T

# Constants naming
dotnet_naming_symbols.constants_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.constants_symbols.applicable_kinds = field
dotnet_naming_symbols.constants_symbols.required_modifiers = const

dotnet_naming_rule.constants_rule.severity = warning
dotnet_naming_rule.constants_rule.style = pascal_case_style
dotnet_naming_rule.constants_rule.symbols = constants_symbols

# Private constants naming
dotnet_naming_symbols.private_constants_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_constants_symbols.applicable_kinds = field
dotnet_naming_symbols.private_constants_symbols.required_modifiers = const

dotnet_naming_rule.private_constants_rule.severity = warning
dotnet_naming_rule.private_constants_rule.style = pascal_case_style
dotnet_naming_rule.private_constants_rule.symbols = private_constants_symbols

# Local constants naming
dotnet_naming_symbols.local_constants_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_constants_symbols.applicable_kinds = local
dotnet_naming_symbols.local_constants_symbols.required_modifiers = const

dotnet_naming_rule.local_constants_rule.severity = warning
dotnet_naming_rule.local_constants_rule.style = camel_case_style
dotnet_naming_rule.local_constants_rule.symbols = local_constants_symbols

# Events naming
dotnet_naming_symbols.event_symbols.applicable_accessibilities = *
dotnet_naming_symbols.event_symbols.applicable_kinds = event

dotnet_naming_rule.event_rule.severity = warning
dotnet_naming_rule.event_rule.style = pascal_case_style
dotnet_naming_rule.event_rule.symbols = event_symbols

# Interfaces naming
dotnet_naming_symbols.interfaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.interfaces_symbols.applicable_kinds = interface

dotnet_naming_rule.interfaces_rule.severity = warning
dotnet_naming_rule.interfaces_rule.style = i_pascal_case_style
dotnet_naming_rule.interfaces_rule.symbols = interfaces_symbols

# Local variables naming
dotnet_naming_symbols.locals_symbols.applicable_accessibilities = *
dotnet_naming_symbols.locals_symbols.applicable_kinds = local

dotnet_naming_rule.locals_rule.severity = warning
dotnet_naming_rule.locals_rule.style = camel_case_style
dotnet_naming_rule.locals_rule.symbols = locals_symbols

# Local functions naming
dotnet_naming_symbols.local_functions_symbols.applicable_accessibilities = *
dotnet_naming_symbols.local_functions_symbols.applicable_kinds = local_function

dotnet_naming_rule.local_functions_rule.severity = warning
dotnet_naming_rule.local_functions_rule.style = pascal_case_style
dotnet_naming_rule.local_functions_rule.symbols = local_functions_symbols

# Methods naming
dotnet_naming_symbols.method_symbols.applicable_accessibilities = *
dotnet_naming_symbols.method_symbols.applicable_kinds = method

dotnet_naming_rule.method_rule.severity = warning
dotnet_naming_rule.method_rule.style = pascal_case_style
dotnet_naming_rule.method_rule.symbols = method_symbols

# Parameters naming
dotnet_naming_symbols.parameters_symbols.applicable_accessibilities = *
dotnet_naming_symbols.parameters_symbols.applicable_kinds = parameter

dotnet_naming_rule.parameters_rule.severity = warning
dotnet_naming_rule.parameters_rule.style = camel_case_style
dotnet_naming_rule.parameters_rule.symbols = parameters_symbols

# Private fields naming
dotnet_naming_symbols.private_fields_symbols.applicable_accessibilities = private
dotnet_naming_symbols.private_fields_symbols.applicable_kinds = field

dotnet_naming_rule.private_instance_fields_rule.severity = warning
dotnet_naming_rule.private_instance_fields_rule.style = underscore_camel_case_style
dotnet_naming_rule.private_instance_fields_rule.symbols = private_fields_symbols

# Public fields naming
dotnet_naming_symbols.public_fields_symbols.applicable_accessibilities = public,internal,protected,protected_internal,private_protected
dotnet_naming_symbols.public_fields_symbols.applicable_kinds = field

dotnet_naming_rule.public_fields_rule.severity = warning
dotnet_naming_rule.public_fields_rule.style = pascal_case_style
dotnet_naming_rule.public_fields_rule.symbols = public_fields_symbols

# Properties naming
dotnet_naming_symbols.property_symbols.applicable_accessibilities = *
dotnet_naming_symbols.property_symbols.applicable_kinds = property

dotnet_naming_rule.property_rule.severity = warning
dotnet_naming_rule.property_rule.style = pascal_case_style
dotnet_naming_rule.property_rule.symbols = property_symbols

# Types and namespaces naming
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_accessibilities = *
dotnet_naming_symbols.types_and_namespaces_symbols.applicable_kinds = namespace,class,struct,enum,delegate

dotnet_naming_rule.types_and_namespaces_rule.severity = warning
dotnet_naming_rule.types_and_namespaces_rule.style = pascal_case_style
dotnet_naming_rule.types_and_namespaces_rule.symbols = types_and_namespaces_symbols

# Generic parameters naming
dotnet_naming_symbols.type_parameters_symbols.applicable_accessibilities = *
dotnet_naming_symbols.type_parameters_symbols.applicable_kinds = type_parameter

dotnet_naming_rule.type_parameters_rule.severity = warning
dotnet_naming_rule.type_parameters_rule.style = t_pascal_case_style
dotnet_naming_rule.type_parameters_rule.symbols = type_parameters_symbols

dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = true
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:none
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:none
dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion
dotnet_style_qualification_for_event = true:warning
dotnet_style_qualification_for_field = true:warning
dotnet_style_qualification_for_method = true:warning
dotnet_style_qualification_for_property = true:warning
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
file_header_template = 